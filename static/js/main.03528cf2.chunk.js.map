{"version":3,"sources":["components/Navbar/index.js","components/Jumbo/index.js","components/Wrapper/index.js","components/Card/index.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","message","score","topScore","Wrapper","children","Card","onClick","handleClick","id","src","imageURL","alt","data-id","hasBeenClicked","App","state","Characters","highScore","event","console","log","target","currentId","getAttribute","setState","includes","push","newCount","arr","i","length","j","Math","floor","random","temp","this","Jumbo","map","character","image","name","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4rCAeeA,MAZf,SAAgBC,GAEZ,OACI,sBAAKC,UAAU,SAAf,UACI,8CACR,oBAAIA,UAAU,UAAd,SAAyBD,EAAME,UAC/B,yCAAYF,EAAMG,MAAlB,iBAAuCH,EAAMI,gB,MCIlCL,MAVf,SAAgBC,GAEZ,OACI,qBAAKC,UAAU,YAAf,SACI,sD,MCAGI,MAJf,SAAiBL,GACf,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMM,Y,aCY1BC,MAZf,SAAcP,GAEV,OACI,qBAAKC,UAAY,OAAjB,SACI,qBAAKA,UAAY,oBAAjB,SACA,qBAAMO,QAASR,EAAMS,YAAaC,GAAIV,EAAMU,GAAIC,IAAKX,EAAMY,SAAUX,UAAU,sBAAsBY,IAAKb,EAAMa,IAAKC,UAASd,EAAMU,UCF5IK,EAAiB,GA8ENC,E,4MA1EbC,MAAQ,CAENC,WAAYA,EACZf,MAAO,EACPgB,UAAW,EACXjB,QAAS,4B,EAIXO,YAAc,SAACW,GACbC,QAAQC,IAAIF,EAAMG,QAClB,IAAMC,EAAYJ,EAAMG,OAAOE,aAAa,WAMhD,GAJIJ,QAAQC,IAAIP,GAEhB,EAAKW,SAAS,CAACxB,QAAS,eAEnBa,EAAeY,SAASH,GAU3B,EAAKE,SAAS,CAACvB,MAAO,IACtB,EAAKuB,SAAS,CAACxB,QAAS,iBACxBa,EAAiB,OAZsB,CACvCA,EAAea,KAAKJ,GACpB,IAAMK,EAAW,EAAKZ,MAAMd,MAAQ,EAEpC,EAAKuB,SAAS,CAACvB,MAAO0B,IACtB,EAAKH,SAAS,CAACxB,QAAS,UACpB2B,EAAW,EAAKZ,MAAME,WACxB,EAAKO,SAAS,CAACP,UAAWU,IAYxB,IADA,IAAMC,EAAM,EAAKb,MAAMC,WACda,EAAID,EAAIE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,SAAWN,EAAIE,QACnCK,EAAOP,EAAIC,GACfD,EAAIC,GAAKD,EAAIG,GACbH,EAAIG,GAAKI,EAEX,EAAKX,SAAS,CAAER,WAAYY,K,uDAGtB,IAAD,OACP,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACA3B,MAASmC,KAAKrB,MAAMd,MACpBC,SAAWkC,KAAKrB,MAAME,UACtBjB,QAASoC,KAAKrB,MAAMf,UAEpB,cAACqC,EAAD,IACA,qBAAKtC,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SACDqC,KAAKrB,MAAMC,WAAWsB,KAAI,SAACC,GAAD,OACzB,cAAC,EAAD,CAEE7B,SAAU6B,EAAUC,MACpBhC,GAAI+B,EAAU/B,GACdG,IAAK4B,EAAUE,KACflC,YAAa,EAAKA,aAJbgC,EAAU/B,kB,GA3DTkC,aCEHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.03528cf2.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css'\n\nfunction NavBar(props) {\n\n    return (\n        <nav className=\"navbar\">\n            <h1>Shrek Clicky</h1>\n    <h3 className=\"message\">{props.message}</h3>\n    <h3>Score: {props.score} | Top Score: {props.topScore}</h3>\n        </nav>\n\n    )\n}\n\nexport default NavBar;\n\n\n\n\n","import React from 'react';\nimport './style.css'\n\nfunction NavBar(props) {\n\n    return (\n        <div className=\"jumbotron\">\n            <h1>Shrek is the best</h1>\n        </div>\n\n    )\n}\n\nexport default NavBar","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from 'react'\nimport './style.css'\n\n\nfunction Card(props) {\n\n    return (\n        <div className = \"Card\">\n            <div className = \"img-container col\">\n            <img  onClick={props.handleClick} id={props.id} src={props.imageURL} className=\"card-img-top images\" alt={props.alt} data-id={props.id}></img>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Card","import React, { Component } from \"react\";\nimport NavBar from \"./components/Navbar\";\nimport Jumbo from \"./components/Jumbo\";\nimport Wrapper from \"./components/Wrapper\";\nimport Characters from \"./Characters.json\";\nimport Card from \"./components/Card\";\n\nlet hasBeenClicked = [];\n\n\nclass App extends Component {\n  state = {\n    // THIS IS STORING ALL MY JSON FILE \n    Characters: Characters,\n    score: 0,\n    highScore: 0,\n    message: \"Click a picture to start\"\n  };\n\n\n  handleClick = (event) => {\n    console.log(event.target);\n    const currentId = event.target.getAttribute(\"data-id\");\n\n    console.log(hasBeenClicked);\n\nthis.setState({message: \"Let's play\"})\n\nif (!hasBeenClicked.includes(currentId)) {\n  hasBeenClicked.push(currentId)\n  const newCount = this.state.score + 1;\n  // const highScoreCount = this.state.highScore +1;\n  this.setState({score: newCount});\n  this.setState({message: \"Nice!\"})\n  if (newCount > this.state.highScore) {\n    this.setState({highScore: newCount})\n  }\n} else {\n  this.setState({score: 0});\n  this.setState({message: \"Wrong Buddy!\"})\n  hasBeenClicked = [];\n\n\n}\n\n      // Shuffles the array of characters\n      const arr = this.state.Characters;\n      for (let i = arr.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * arr.length);\n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n      }\n      this.setState({ Characters: arr });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <NavBar\n        score = {this.state.score}\n        topScore ={this.state.highScore}\n        message={this.state.message}\n        />\n        <Jumbo />\n        <div className=\"container\">\n          <div className=\"row\">\n        {this.state.Characters.map((character) => (\n          <Card\n            key={character.id}\n            imageURL={character.image}\n            id={character.id}\n            alt={character.name}\n            handleClick={this.handleClick}\n         \n          />\n          \n        ))}\n</div>\n</div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}